{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jairo.machuca/Documents/projects/diviso/divisobolsa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DataoperatividadclienteComponent = class DataoperatividadclienteComponent {\n  // created\n  constructor(servicioGeneralService, pFormBuilder) {\n    this.servicioGeneralService = servicioGeneralService;\n    this.pFormBuilder = pFormBuilder;\n  } // mounted \n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.setInitializeForm();\n\n      _this.onChanges();\n    })();\n  } //computed or Watch\n\n\n  onChanges() {\n    let inver = this.frmDatoContrato.get('inversionistainstitucional');\n    inver.valueChanges.subscribe(val => {\n      this.servicioGeneralService.servicioGeneralObservableData = {\n        inversionistaInstitucional: val\n      };\n    });\n    this.frmDatoContrato.valueChanges.subscribe(val => {\n      this.servicioGeneralService.servicioGeneralObservableData = {\n        contratoIntermediacionCompleto: false\n      };\n    });\n  }\n\n  removeValidate(e) {\n    let porcentaje = this.frmDatoContrato.get('porcentaje');\n    let tipofirma = this.frmDatoContrato.get('tipofirma');\n\n    if (e.target.value == 'copropiedad') {\n      porcentaje.setValidators(Validators.required);\n      porcentaje.updateValueAndValidity();\n      tipofirma.setValidators(Validators.required);\n      tipofirma.updateValueAndValidity();\n    } else {\n      porcentaje.clearValidators();\n      porcentaje.updateValueAndValidity();\n      tipofirma.clearValidators();\n      tipofirma.updateValueAndValidity();\n      porcentaje.reset();\n      tipofirma.reset();\n    }\n  }\n\n  setInitializeForm() {\n    this.InitializeFormDatoContrato();\n  }\n\n  InitializeFormDatoContrato() {\n    this.frmDatoContrato = this.pFormBuilder.group({\n      fecha: [null, Validators.required],\n      tipopropiedad: [null, Validators.required],\n      porcentaje: [null],\n      tipofirma: [null],\n      vinculado: [null, Validators.required],\n      inversionistainstitucional: [null, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.frmDatoContrato.invalid) {\n      return;\n    }\n\n    this.servicioGeneralService.servicioGeneralObservableData = {\n      contratoIntermediacionCompleto: true,\n      tabmostrar: 2\n    };\n  }\n\n};\nDataoperatividadclienteComponent = __decorate([Component({\n  selector: 'app-dataoperatividadcliente',\n  templateUrl: './dataoperatividadcliente.component.html',\n  styleUrls: ['./dataoperatividadcliente.component.css']\n})], DataoperatividadclienteComponent);\nexport { DataoperatividadclienteComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,QAAkC,eAAlC;AAOA,IAAaC,gCAAgC,GAA7C,MAAaA,gCAAb,CAA6C;EAE3C;EACAC,YACUC,sBADV,EAEUC,YAFV,EAEmC;IADzB;IACA;EACN,CANuC,CAQ3C;;;EACMC,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,iBAAL;;MACA,KAAI,CAACC,SAAL;IAFY;EAGb,CAZ0C,CAc3C;;;EACAA,SAAS;IACP,IAAIC,KAAK,GAAG,KAAKC,eAAL,CAAqBC,GAArB,CAAyB,4BAAzB,CAAZ;IACAF,KAAK,CAACG,YAAN,CAAmBC,SAAnB,CAA6BC,GAAG,IAAG;MACjC,KAAKV,sBAAL,CAA4BW,6BAA5B,GAA4D;QAC1DC,0BAA0B,EAAEF;MAD8B,CAA5D;IAGD,CAJD;IAKA,KAAKJ,eAAL,CAAqBE,YAArB,CAAkCC,SAAlC,CAA4CC,GAAG,IAAG;MAChD,KAAKV,sBAAL,CAA4BW,6BAA5B,GAA4D;QAC1DE,8BAA8B,EAAG;MADyB,CAA5D;IAGD,CAJD;EAMD;;EAEDC,cAAc,CAACC,CAAD,EAAO;IACnB,IAAIC,UAAU,GAAG,KAAKV,eAAL,CAAqBC,GAArB,CAAyB,YAAzB,CAAjB;IACA,IAAIU,SAAS,GAAG,KAAKX,eAAL,CAAqBC,GAArB,CAAyB,WAAzB,CAAhB;;IAEA,IAAGQ,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,aAArB,EAAmC;MACjCH,UAAU,CAACI,aAAX,CAAyBC,UAAU,CAACC,QAApC;MACAN,UAAU,CAACO,sBAAX;MACAN,SAAS,CAACG,aAAV,CAAwBC,UAAU,CAACC,QAAnC;MACAL,SAAS,CAACM,sBAAV;IACD,CALD,MAKO;MACLP,UAAU,CAACQ,eAAX;MACAR,UAAU,CAACO,sBAAX;MACAN,SAAS,CAACO,eAAV;MACAP,SAAS,CAACM,sBAAV;MACAP,UAAU,CAACS,KAAX;MACAR,SAAS,CAACQ,KAAV;IACD;EACF;;EACDtB,iBAAiB;IACf,KAAKuB,0BAAL;EACD;;EACDA,0BAA0B;IACxB,KAAKpB,eAAL,GAAuB,KAAKL,YAAL,CAAkB0B,KAAlB,CAAwB;MAC7CC,KAAK,EAAE,CAAC,IAAD,EAAOP,UAAU,CAACC,QAAlB,CADsC;MAE7CO,aAAa,EAAE,CAAC,IAAD,EAAOR,UAAU,CAACC,QAAlB,CAF8B;MAG7CN,UAAU,EAAE,CAAC,IAAD,CAHiC;MAI7CC,SAAS,EAAE,CAAC,IAAD,CAJkC;MAK7Ca,SAAS,EAAE,CAAC,IAAD,EAAOT,UAAU,CAACC,QAAlB,CALkC;MAM7CS,0BAA0B,EAAE,CAAC,IAAD,EAAOV,UAAU,CAACC,QAAlB;IANiB,CAAxB,CAAvB;EAQD;;EACDU,QAAQ;IACN,KAAKC,SAAL,GAAiB,IAAjB;;IACA,IAAI,KAAK3B,eAAL,CAAqB4B,OAAzB,EAAkC;MAChC;IACD;;IACD,KAAKlC,sBAAL,CAA4BW,6BAA5B,GAA4D;MAC1DE,8BAA8B,EAAG,IADyB;MAE1DsB,UAAU,EAAE;IAF8C,CAA5D;EAID;;AAtE0C,CAA7C;AAAarC,gCAAgC,eAL5CD,SAAS,CAAC;EACTuC,QAAQ,EAAE,6BADD;EAETC,WAAW,EAAE,0CAFJ;EAGTC,SAAS,EAAE,CAAC,yCAAD;AAHF,CAAD,CAKmC,GAAhCxC,gCAAgC,CAAhC;SAAAA","names":["Component","DataoperatividadclienteComponent","constructor","servicioGeneralService","pFormBuilder","ngOnInit","setInitializeForm","onChanges","inver","frmDatoContrato","get","valueChanges","subscribe","val","servicioGeneralObservableData","inversionistaInstitucional","contratoIntermediacionCompleto","removeValidate","e","porcentaje","tipofirma","target","value","setValidators","Validators","required","updateValueAndValidity","clearValidators","reset","InitializeFormDatoContrato","group","fecha","tipopropiedad","vinculado","inversionistainstitucional","onSubmit","submitted","invalid","tabmostrar","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jairo.machuca\\Documents\\projects\\diviso\\divisobolsa\\src\\app\\formulario\\components\\dataoperatividadcliente\\dataoperatividadcliente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dataoperatividadcliente',\n  templateUrl: './dataoperatividadcliente.component.html',\n  styleUrls: ['./dataoperatividadcliente.component.css']\n})\nexport class DataoperatividadclienteComponent implements OnInit {\n\n  // created\n  constructor(\n    private servicioGeneralService: ServicioGeneralService,\n    private pFormBuilder: FormBuilder,\n  ) {}\n\n  // mounted \n  async ngOnInit() {\n    this.setInitializeForm();\n    this.onChanges();\n  }\n\n  //computed or Watch\n  onChanges() {\n    let inver = this.frmDatoContrato.get('inversionistainstitucional') as FormGroup;\n    inver.valueChanges.subscribe(val => {\n      this.servicioGeneralService.servicioGeneralObservableData = {\n        inversionistaInstitucional: val\n      }\n    });\n    this.frmDatoContrato.valueChanges.subscribe(val => {\n      this.servicioGeneralService.servicioGeneralObservableData = {\n        contratoIntermediacionCompleto : false\n      }\n    });\n\n  }\n\n  removeValidate(e: any){\n    let porcentaje = this.frmDatoContrato.get('porcentaje') as FormGroup;\n    let tipofirma = this.frmDatoContrato.get('tipofirma') as FormGroup;\n \n    if(e.target.value == 'copropiedad'){\n      porcentaje.setValidators(Validators.required);\n      porcentaje.updateValueAndValidity();\n      tipofirma.setValidators(Validators.required);\n      tipofirma.updateValueAndValidity();\n    } else {\n      porcentaje.clearValidators();\n      porcentaje.updateValueAndValidity();\n      tipofirma.clearValidators();\n      tipofirma.updateValueAndValidity();\n      porcentaje.reset();\n      tipofirma.reset();\n    }\n  }\n  setInitializeForm() {\n    this.InitializeFormDatoContrato();\n  }\n  InitializeFormDatoContrato(){\n    this.frmDatoContrato = this.pFormBuilder.group({\n      fecha: [null, Validators.required],\n      tipopropiedad: [null, Validators.required],\n      porcentaje: [null],\n      tipofirma: [null],\n      vinculado: [null, Validators.required],\n      inversionistainstitucional: [null, Validators.required]\n    })\n  }\n  onSubmit() {\n    this.submitted = true\n    if (this.frmDatoContrato.invalid) {\n      return\n    }\n    this.servicioGeneralService.servicioGeneralObservableData = {\n      contratoIntermediacionCompleto : true,\n      tabmostrar: 2\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}